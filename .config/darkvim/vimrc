" Vim run command with dark-powered dein.vim.
" Dark-powered means do everything in the vim by the author of dein.vim
"
" Author: OctHe
" Copyright (C)
"
" =====================================================================
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
if &compatible
  set nocompatible
endif

" Enable file type detection.
filetype plugin on
" Enable automatic indentation.
filetype indent on

set runtimepath-=~/.vim
set runtimepath-=~/.vim/after
set runtimepath^=~/.config/darkvim
set runtimepath+=~/.config/darkvim/after
set packpath-=~/.vim
set packpath-=~/.vim/after
set packpath^=~/.config/darkvim
set packpath+=~/.config/darkvim/after

" Keymappings {{{1

" Use <Space> as the <Leader>
" This command must be before all keymappings and plugin configs
let mapleader = ' '

" Easy-nohlsearch
nnoremap <silent> <Esc> :nohlsearch<CR>
tnoremap <silent> <Esc><Esc> <C-\><C-n><CR>
" Easy indent
vmap < <gv
vmap > >gv

" }}}1

" View {{{1

" Default colorscheme if plugins does not load.
" Chosen from these builtin colorschemes: desert, peachpuff, quiet, slate
colorscheme desert

" }}}1

let $CACHE = expand('~/.cache')
if !($CACHE->isdirectory())
  call mkdir($CACHE, 'p')
endif
if &runtimepath !~# '/dein.vim'
  let s:dein_src = $CACHE .. '/dein/repos/github.com/Shougo/dein.vim'
  if !(s:dein_src->isdirectory())
    execute '!git clone https://github.com/Shougo/dein.vim' s:dein_src
  endif
  execute 'set runtimepath^=' .. s:dein_src
  execute 'helptags ' s:dein_src .. '/doc'
  let g:dein#install_process_timeout = 1200

  nnoremap <Leader>pi :call dein#install()<CR>
  nnoremap <Leader>pu :call dein#update()<CR>
  nnoremap <Leader>prc :call dein#recache_runtimepath()<CR>
  nnoremap <Leader>pd :call map(dein#check_clean(), "delete(v:val, 'rf')")<CR>

endif



" Call dein initialization (required)
call dein#begin($CACHE .. '/dein')

call dein#add('tpope/vim-repeat') " Plugin repeat support
call dein#add('tpope/vim-endwise')
call dein#add('tpope/vim-fugitive', {'hook_source': 'call vcs#Fugitive()'})
call dein#add('tpope/vim-surround')

" Automatic closing of quotes, parenthesis, brackets,
call dein#add('Raimondi/delimitMate')
call dein#add('mbbill/undotree', {'hook_source': 'call view#Undotree()'})

call dein#add('mg979/vim-visual-multi')

call dein#add('Yggdroot/indentLine')
" LeaderF: Asynchronous fuzzy finder with popup window
if  has('python3') &&  executable('pip3')
  call dein#add('Yggdroot/LeaderF', {
        \ 'hook_post_update': 'LeaderfInstallCExtension',
        \ 'hook_source': 'call navigator#LeaderF()'})
endif

call dein#add('preservim/nerdtree', {'hook_source': 'call navigator#NerdTree()'})
call dein#add('justinmk/vim-sneak', {'hook_source': 'call navigator#Sneak()'})
call dein#add('AndrewRadev/splitjoin.vim')

call dein#add('tomtom/tcomment_vim', {'hook_source': 'call completer#TComment()'})

call dein#add('neomake/neomake')

if  has('python3')
  call dein#add('honza/vim-snippets')
  call dein#add('SirVer/ultisnips', {'hook_source': 'call completer#Ultisnips()'})
endif

if v:versionlong >= 9010016 && has('python3') && executable('cmake')
  call dein#add('ycm-core/YouCompleteMe', {
        \ 'build': './install.py --clangd-completer',
        \ 'hook_source': 'call completer#YCM()'
        \ })
endif

if has('python3')
  call dein#add('puremourning/vimspector', {'hook_source': 'call runner#vimspector()'})
endif
call dein#add('lervag/vimtex', {'hook_source': 'call runner#vimtex()'})
call dein#add('chrisbra/csv.vim')

call dein#add('sbdchd/neoformat')

" Grep the results into a quickfix. It can replace '/' command
call dein#add('mhinz/vim-grepper', {'hook_source': 'call navigator#Grepper()'})
call dein#add('mhinz/vim-signify', {'hook_source': 'call vcs#Signify()'})
call dein#add('mhinz/vim-startify')

call dein#add('voldikss/vim-floaterm', {'hook_source': 'call runner#Floaterm()'})

call dein#add('junegunn/vim-easy-align')
" Display contents in register
call dein#add('junegunn/vim-peekaboo')

call dein#add('ntpeters/vim-better-whitespace')
call dein#add('kshenoy/vim-signature')
" Context: Show the function, for-loop and condition.
call dein#add('wellle/context.vim')
call dein#add('luochen1990/rainbow', {'hook_source': 'call view#Rainbow()'})
call dein#add('psliwka/vim-smoothie')
call dein#add('vim-airline/vim-airline', {'hook_source': 'call view#Airline()'})

call dein#add('liuchengxu/vista.vim', {'hook_source': 'call lint#Vista()'})
call dein#add('liuchengxu/vim-which-key', {'hook_source': 'call view#Whichkey()'})

call dein#add('rafi/awesome-vim-colorschemes', {'hook_source': 'call view#AwesomeColorschemes()'})

" Finish dein initialization (required)
call dein#end()
call dein#call_hook('source')

" Options {{{1
set hlsearch    " Highlight the search results
set incsearch   " Show the pattern while typing

set modeline    " Modeline is the last comment line if vim is the editor. Use `help modeline` for detail.

set hidden  " Hide unsaved buffer

set expandtab   " Expand tag to space
set tabstop=4   " One tab includes four spaces
set shiftwidth=4    " The width of '<' and '>'
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.

set smartindent     " Do smart autoindenting

set ruler           " show the cursor position
set wildmenu        " display completion matches in a status line
set number          " Show line number
set splitbelow      " New buffer splits below by default
set splitright      " New buffer splits right by default
set mouse=a         " Enable mouse in all mode
set scrolloff=5     " Show a few lines around the cursor
set fileencodings=utf-8,gb18030,latin1
set background=dark

if has('gui_running')
  " GUI options
  set guioptions=aegrLt
endif

syntax enable       " This enables Vim's syntax-related features.
" Without this, some VimTeX features will not work
" }}}1

" Commands {{{1
augroup EnhancedHelp
  au!

  autocmd BufWinEnter *
        \ if &filetype == 'help'
        \ |   set number
        \ |   if winwidth('%') > 180
        \ |       wincmd L
        \ |       vertical resize 90
        \ |   endif
        \ | endif

augroup END
" }}}1
" vim: set sw=2 sts=2 et:
