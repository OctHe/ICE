" 
" Default vim run command file
" Author: OctHe
" Copyright (C): 2023-2024
" 
" =====================================================================
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
if &compatible
    set nocompatible
endif

" Enable file type detection.
filetype plugin on
" Enable automatic indentation.
filetype indent on


" Keymappings {{{1

" Use <Space> as the <Leader>
" This command must be before all keymappings and plugin configs
let mapleader = ' '

" It changes the behavior of star to not jump to next word
" Yank the word into the register s, and then assign it in to the yank
" register (The register / is not writeable directly)
nmap <silent> * "syiw:let @/ = @s<CR>

" Easy-nohlsearch
nnoremap <silent> <Esc> :nohlsearch<CR>
tnoremap <silent> <Esc><Esc> <C-\><C-n><CR>

" Show mappings
nnoremap <silent> <Leader>m :verbose map 

" }}}1


" Try to install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    if empty(glob('~/.vim/autoload/plug.vim'))
        echo "curl plug.vim from raw.githubusercontent.com failed. Try git clone.\n"

        silent !git clone https://github.com/junegunn/vim-plug /tmp/vim-plug
        silent !cp /tmp/vim-plug/plug.vim ~/.vim/autoload/
        silent !rm -rf /tmp/vim-plug
    endif

endif

" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
let s:plugins = expand('~/.local/share/vim/plugins/')
call plug#begin(s:plugins)

" Register vim-plug as a plugin to get the help doc.
" Note that vim-plug (the plug.vim file) in this file is not working.
Plug 'junegunn/vim-plug'

Plug 'LunarWatcher/auto-pairs'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-endwise'

" Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-commentary'

Plug 'Yggdroot/indentLine'

Plug 'timsu92/vim-easymotion' " This version fixes a bug in folding
Plug 'AndrewRadev/splitjoin.vim'

" NERDTree: File explorer. 
Plug 'preservim/nerdtree'

Plug 'preservim/tagbar'

Plug 'ludovicchabant/vim-gutentags', { 'for': ['c', 'cpp'], } 
Plug 'vim-scripts/CCTree', { 'for': ['c', 'cpp'], }
Plug 'neomake/neomake'

if  has('python3')
    " LeaderF: Asynchronous fuzzy finder with popup window
    if  executable('pip3') && executable('/bin/gcc')
        Plug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }
    else
        Plug 'Yggdroot/LeaderF'
    endif

else
    if executable('/bin/fzf')
        Plug 'junegunn/fzf'
    else
        Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
        " Plug 'ctrlpvim/ctrlp.vim'
    endif
endif

if has('python3')
    Plug 'honza/vim-snippets'
    Plug 'SirVer/ultisnips'
endif
if v:versionlong >= 9010646
    Plug 'girishji/vimcomplete'
else 
    Plug 'ervandew/supertab'
endif

Plug 'sbdchd/neoformat'

Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

Plug 'tpope/vim-dispatch'
Plug 'skywind3000/asyncrun.vim'
Plug 'lervag/vimtex'

Plug 'voldikss/vim-floaterm'

" TODO: Use the same file for both vim and tmux
Plug 'christoomey/vim-tmux-navigator'

Plug 'luochen1990/rainbow'
Plug 'junegunn/vim-easy-align'
Plug 'wellle/context.vim'
Plug 'mhinz/vim-startify'
Plug 'vim-airline/vim-airline'
Plug 'liuchengxu/vim-which-key'
Plug 'morhetz/gruvbox'

" Initialize plugin system
call plug#end()

call onepoint#PluginConfig()

" View {{{1
try
    " Colorscheme may use plugin: gruvbox
    colorscheme gruvbox
catch
    " Builtin colorschemes: desert, peachpuff, quiet, slate
    colorscheme desert
endtry
" }}}1

" Options {{{1
set hlsearch    " Highlight the search results
set incsearch   " Show the pattern while typing

set modeline    " Modeline is the last comment line if vim is the editor. Use `help modeline` for detail.

set hidden  " Hide unsaved buffer

set expandtab   " Expand tag to space
set tabstop=4   " One tab includes four spaces
set shiftwidth=4    " The width of '<' and '>'
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.

set smartindent     " Do smart autoindenting

set ruler           " show the cursor position 
set wildmenu        " display completion matches in a status line
set number          " Show line number
set splitbelow      " New buffer splits below by default
set splitright      " New buffer splits right by default
set mouse=a         " Enable mouse in all mode
set scrolloff=5     " Show a few lines around the cursor
set fileencodings=utf-8,gb18030,latin1

if has('gui_running')
    " GUI options
    set guioptions=aegrLt
    set background=light
else
    set background=dark
endif

syntax enable       " This enables Vim's syntax-related features. 
" Without this, some VimTeX features will not work 
" }}}1

" Commends {{{1

" Command to see the difference between the current buffer and the file loaded from.
if !exists(':DiffOrig')
    command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
                \ | wincmd p | diffthis
endif

augroup OnePointStart
    au!

    " A more suitable help file
    autocmd BufWinEnter * 
                \ if &filetype == 'help'
                \ |   set number 
                \ |   if winwidth('%') > 180
                \ |       wincmd L 
                \ |       vertical resize 90
                \ |   endif
                \ | endif

    " When editing a file, always jump to the last known cursor position.
    " Don't do it when the position is invalid, when inside an event handler
    " (happens when dropping a file on gvim) and for a commit message (it's
    " likely a different one than last time).
    autocmd BufReadPost *
                \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
                \ |   exe "normal! g`\""
                \ | endif

    autocmd CmdwinEnter *
                \ echohl Todo
                \ | echo 'You discovered the command-line window! You can close it with ":q".'
                \ | echohl None
augroup END

" }}}1

" vim: set sw=4 sts=4 et fdm=marker:
