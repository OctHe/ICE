"
" Default vim run command file
" Author: OctHe
" Copyright (C)
"
" =====================================================================
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
if &compatible
  set nocompatible
endif

" Enable file type detection.
filetype plugin on
" Enable automatic indentation.
filetype indent on

" Keymappings {{{1

" Use <Space> as the <Leader>
" This command must be before all keymappings and plugin configs
let mapleader = ' '

" Easy-nohlsearch
nnoremap <silent> <Esc> :nohlsearch<CR>
tnoremap <silent> <Esc><Esc> <C-\><C-n><CR>

" Easy indent
vmap < <gv
vmap > >gv

" }}}1

" Try to install jetpack if not found
let s:jetpack_dir = expand('~/.vim/pack/jetpack/opt/vim-jetpack')
if !(s:jetpack_dir->isdirectory())
  execute '!git clone https://github.com/tani/vim-jetpack' s:jetpack_dir
endif
packadd vim-jetpack

call jetpack#begin(expand('~/.local/share/vim/plugins/'))

call jetpack#add("tani/vim-jetpack")

Jetpack 'tpope/vim-surround'
Jetpack 'tpope/vim-fugitive'

" starsearch: Enhanced star keymapping. Avoid jumping to next
Jetpack 'vim-scripts/star-search'
Jetpack 'vim-scripts/AutoComplPop'
Jetpack 'vim-scripts/CCTree'
Jetpack 'vim-scripts/Gundo'

" Sneak: Jump with 2 chars.
Jetpack 'justinmk/vim-sneak'
autocmd User plugin_config call navigator#Sneak()
" Path navigator
Jetpack 'justinmk/vim-dirvish'

Jetpack 'Yggdroot/indentLine'
" LeaderF: Asynchronous fuzzy finder with popup window
if  has('python3') &&  executable('pip3')
  Jetpack 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension'}
  autocmd User plugin_config call navigator#LeaderF()
endif

Jetpack 'tomtom/tcomment_vim'

" Automatic closing of quotes, parenthesis, brackets,
Jetpack 'Raimondi/delimitMate'

Jetpack 'ludovicchabant/vim-gutentags'

Jetpack 'sbdchd/neoformat'

" Align
Jetpack 'godlygeek/tabular'

Jetpack 'dense-analysis/ale'
autocmd User plugin_config call lint#ALE()

Jetpack 'skywind3000/asyncrun.vim'

" gitgutter: Show diff in the column sign (See :help signcolumn
Jetpack 'airblade/vim-gitgutter'

Jetpack 'liuchengxu/vista.vim'
autocmd User plugin_config call lint#Vista()
Jetpack 'liuchengxu/vim-which-key'
autocmd User plugin_config call view#Whichkey()

Jetpack 'vim-airline/vim-airline'
autocmd User plugin_config call view#Airline()

Jetpack 'morhetz/gruvbox'

call jetpack#end()
doautocmd User plugin_config

" View {{{1
try
  " Colorscheme may use plugin
  colorscheme gruvbox
catch
  " Builtin colorscheme
  colorscheme desert
endtry
" }}}1

" Options {{{1
syntax enable                          " This enables Vim's syntax-related features.

set hlsearch                           " Highlight the search results
set incsearch                          " Show the pattern while typing

set smartindent                        " Do smart autoindenting
set expandtab                          " Expand tag to space
set tabstop=4                          " One tab includes four spaces
set shiftwidth=4                       " The width of '<' and '>'
set backspace=indent,eol,start         " Allow backspacing over everything in insert mode.

set splitbelow                         " New buffer splits below by default
set splitright                         " New buffer splits right by default

set modeline                           " Modeline is the last comment line if vim is the editor. Use `help modeline` for detail.
set hidden                             " Hide unsaved buffer
set ruler                              " show the cursor position
set wildmenu                           " display completion matches in a status line
set number                             " Show line number
set mouse=a                            " Enable mouse in all mode
set scrolloff=5                        " Minimal number of screen lines to keep above and below the cursor.
set fileencodings=utf-8,gb18030,latin1

set background=dark

" }}}1

" Commends {{{1

augroup EnhancedHelp
  au!

  autocmd BufWinEnter *
        \ if &filetype == 'help'
        \ |   set number
        \ |   if winwidth('%') > 180
        \ |       wincmd L
        \ |       vertical resize 90
        \ |   endif
        \ | endif

augroup END

" }}}1


" vim: set sw=2 sts=2 et fdm=marker:
