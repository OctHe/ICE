" 
" Default vim run command file
" Author: OctHe
" Copyright (C): 2023-2025
" 
" =====================================================================
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
if &compatible
    set nocompatible
endif

" Enable file type detection.
filetype plugin on
" Enable automatic indentation.
filetype indent on

source $VIMRUNTIME/vimrc_example.vim

" Keymappings {{{1

" Use <Space> as the <Leader>
" This command must be before all keymappings and plugin configs
let mapleader = ' '

" It changes the behavior of star to not jump to next word
" Yank the word into the register s, and then assign it in to the yank
" register (The register / is not writeable directly)
nmap <silent> * "syiw:let @/ = @s<CR>
" Easy-nohlsearch
nnoremap <silent> <Esc> :nohlsearch<CR>
tnoremap <silent> <Esc><Esc> <C-\><C-n><CR>
" Easy indent
vmap < <gv
vmap > >gv
" Show mappings
nnoremap <silent> <Leader>m :verbose map 

" }}}1


" Try to install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    if empty(glob('~/.vim/autoload/plug.vim'))
        echo "curl plug.vim from raw.githubusercontent.com failed. Try git clone.\n"

        silent !git clone https://github.com/junegunn/vim-plug /tmp/vim-plug
        silent !cp /tmp/vim-plug/plug.vim ~/.vim/autoload/
        silent !rm -rf /tmp/vim-plug
    endif

endif

" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin(expand('~/.local/share/vim/plugins/'))
autocmd User plugin_config

" Register vim-plug as a plugin to get the help doc.
" Note that vim-plug (the plug.vim file) in this file is not working.
Plug 'junegunn/vim-plug'

Plug 'LunarWatcher/auto-pairs'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-endwise'

Plug 'tomtom/tcomment_vim'

Plug 'Yggdroot/indentLine'

Plug 'timsu92/vim-easymotion' " This version fixes a bug in folding
Plug 'AndrewRadev/splitjoin.vim'

" NERDTree: File explorer. 
Plug 'preservim/nerdtree'
autocmd User plugin_config call navigator#NerdTree()

Plug 'preservim/tagbar'
autocmd User plugin_config call lint#Tagbar()

" Auto generate tags
Plug 'ludovicchabant/vim-gutentags', { 'for': ['c', 'cpp'], } 
autocmd User plugin_config call lint#Gutentags()
Plug 'dense-analysis/ale'
autocmd User plugin_config call lint#ALE()

if  has('python3')
    " LeaderF: Asynchronous fuzzy finder with popup window
    if  executable('pip3') && executable('gcc')
        Plug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }
    else
        Plug 'Yggdroot/LeaderF'
    endif
    autocmd User plugin_config call navigator#LeaderF()
else
    if executable('fzf')
        Plug 'junegunn/fzf'
    else
        Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
    endif
endif

if has('python3')
    " Ultisnips: snippets engine that uses snippet database
    " vim-snippets: snippet database
    Plug 'honza/vim-snippets'
    Plug 'SirVer/ultisnips'
    autocmd User plugin_config call completer#UltiSnips()
endif
if v:versionlong >= 9010016 && has('python3') && executable('cmake')
    Plug 'ycm-core/YouCompleteMe', { 'do': './install.py --clangd-completer' }
    autocmd User plugin_config call completer#YCM()
else 
    Plug 'ervandew/supertab'
endif

Plug 'sbdchd/neoformat'

" fugitive: Provide common git options (diff, status, add, commit, etc)
Plug 'tpope/vim-fugitive'
autocmd User plugin_config call vcs#Fugitive()
" gitgutter: Show diff in the column sign (See :help signcolumn)
Plug 'airblade/vim-gitgutter'

Plug 'skywind3000/asyncrun.vim'

Plug 'voldikss/vim-floaterm'
autocmd User plugin_config call runner#Floaterm()

" Vim-tmux-navigator: It requires configuration in tmux
" TODO: Use the same file for both vim and tmux
Plug 'christoomey/vim-tmux-navigator'

" rainbow: Rainbow brackets
Plug 'luochen1990/rainbow'
autocmd User plugin_config call view#Rainbow()
Plug 'junegunn/vim-easy-align'
Plug 'wellle/context.vim'
Plug 'mhinz/vim-startify'
Plug 'vim-airline/vim-airline'
autocmd User plugin_config call view#Airline()
Plug 'liuchengxu/vim-which-key'
autocmd User plugin_config call view#Whichkey()
Plug 'morhetz/gruvbox'
Plug 'NLKNguyen/papercolor-theme'

" Initialize plugin system
call plug#end()
doautocmd User plugin_config

" View {{{1
try
    " Colorscheme may use plugin
    if has('gui_running')
        colorscheme PaperColor
    else
        colorscheme gruvbox
    endif
catch
    " Builtin colorschemes: desert, peachpuff, quiet, slate
    colorscheme desert
endtry
" }}}1

" Options {{{1
set hlsearch    " Highlight the search results
set incsearch   " Show the pattern while typing

set modeline    " Modeline is the last comment line if vim is the editor. Use `help modeline` for detail.

set hidden  " Hide unsaved buffer

set expandtab   " Expand tag to space
set tabstop=4   " One tab includes four spaces
set shiftwidth=4    " The width of '<' and '>'
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.

set smartindent     " Do smart autoindenting

set ruler           " show the cursor position 
set wildmenu        " display completion matches in a status line
set number          " Show line number
set splitbelow      " New buffer splits below by default
set splitright      " New buffer splits right by default
set mouse=a         " Enable mouse in all mode
set scrolloff=5     " Show a few lines around the cursor
set fileencodings=utf-8,gb18030,latin1

set background=dark

syntax enable       " This enables Vim's syntax-related features. 
" Without this, some VimTeX features will not work 
" }}}1

" Commends {{{1

" Command to see the difference between the current buffer and the file loaded from.
if !exists(':DiffOrig')
    command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
                \ | wincmd p | diffthis
endif

augroup OnePointStart
    au!

    " A more suitable help file
    autocmd BufWinEnter * 
                \ if &filetype == 'help'
                \ |   set number 
                \ |   if winwidth('%') > 180
                \ |       wincmd L 
                \ |       vertical resize 90
                \ |   endif
                \ | endif

augroup END

" }}}1

" vim: set sw=4 sts=4 et fdm=marker:
