"
" Default vim run command file
" Author: OctHe
" Copyright (C)
"
" =====================================================================
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
if &compatible
  set nocompatible
endif

" Enable file type detection.
filetype plugin on
" Enable automatic indentation.
filetype indent on

source $VIMRUNTIME/vimrc_example.vim

" Keymappings {{{1

" Use <Space> as the <Leader>
" This command must be before all keymappings and plugin configs
let mapleader = ' '

" Easy-nohlsearch
nnoremap <silent> <Esc> :nohlsearch<CR>
tnoremap <silent> <Esc><Esc> <C-\><C-n><CR>
" Easy indent
vmap < <gv
vmap > >gv
" Show mappings
nnoremap <silent> <Leader>m :verbose map

" }}}1


" Try to install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  if empty(glob('~/.vim/autoload/plug.vim'))
    echo "curl plug.vim from raw.githubusercontent.com failed. Try git clone.\n"

    silent !git clone https://github.com/junegunn/vim-plug /tmp/vim-plug
    silent !cp /tmp/vim-plug/plug.vim ~/.vim/autoload/
    silent !rm -rf /tmp/vim-plug
  endif

endif

" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin(expand('~/.local/share/vim/plugins/'))

" starsearch: Enhanced star keymapping. Avoid jumping to next
Plug 'vim-scripts/star-search'

Plug 'tpope/vim-dispatch'
" fugitive: Provide common git options (diff, status, add, commit, etc)
Plug 'tpope/vim-fugitive'
autocmd User plugin_config call vcs#Fugitive()

" NERDTree: File explorer.
Plug 'preservim/nerdtree'
autocmd User plugin_config call navigator#NerdTree()
Plug 'preservim/tagbar'
autocmd User plugin_config call lint#Tagbar()
Plug 'preservim/nerdcommenter'
autocmd User plugin_config call completer#NerdCommenter()
Plug 'preservim/vim-indent-guides'
autocmd User plugin_config call view#IndentGuides()
Plug 'preservim/vim-pencil'

" Use the latest fzf instead of the system-wide fzf
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
" vim-plug: Register vim-plug as a plugin to get the help doc.
Plug 'junegunn/vim-plug'
Plug 'junegunn/vim-easy-align'
" goyo.vim and limelight.vim improves text experience
Plug 'junegunn/goyo.vim'
autocmd User plugin_config call view#Goyo()
Plug 'junegunn/limelight.vim'
autocmd User plugin_config call view#Limelight()
" Display contents in register
Plug 'junegunn/vim-peekaboo'

Plug 'liuchengxu/vim-which-key'
autocmd User plugin_config call view#Whichkey()

Plug 'mhinz/vim-signify'
autocmd User plugin_config call vcs#Signify()
" Grep the results into a quickfix.
Plug 'mhinz/vim-grepper'
autocmd User plugin_config call navigator#Grepper()
Plug 'mhinz/vim-startify'

Plug 'itchyny/vim-cursorword'
Plug 'itchyny/lightline.vim'

if has('python3')
  " Ultisnips: snippets engine that uses snippet database
  " vim-snippets: snippet database
  Plug 'honza/vim-snippets' | Plug 'SirVer/ultisnips'
  autocmd User plugin_config call completer#UltiSnips()

  " Auto detects predefined formatters.
  Plug 'vim-autoformat/vim-autoformat'

  Plug 'puremourning/vimspector'
  autocmd User plugin_config call runner#vimspector()
endif

if v:versionlong >= 9010016 && has('python3') && executable('cmake')
  " YCM: a powerful completion engine based on LSP. It relies on cmake,
  " make, g++, python3-dev and LSP.
  " Install the prerequisites in Debian with
  "   sudo apt install cmake make g++ python3-dev
  " In openSUSE with
  "   sudo zypper install cmake make g++ python3-deval
  Plug 'ycm-core/YouCompleteMe', {'do': './install.py --clangd-completer'}
  autocmd User plugin_config call completer#YCM()
else
  Plug 'ervandew/supertab'
endif

Plug 'voldikss/vim-floaterm'
autocmd User plugin_config call runner#Floaterm()

" vim-tmux-navigator
" It requires configuration in tmux
if isdirectory(glob('~/.local/share/tmux/plugin/vim-tmux-navigator'))
  " Use the same file for both vim and tmux
  Plug '~/.local/share/tmux/plugin/vim-tmux-navigator'
else
  Plug 'christoomey/vim-tmux-navigator'
endif

Plug 'machakann/vim-sandwich'

Plug 'timsu92/vim-easymotion'

" rainbow: Rainbow brackets
Plug 'luochen1990/rainbow'
autocmd User plugin_config call view#Rainbow()

Plug 'unblevable/quick-scope'

Plug 'mbbill/undotree'
autocmd User plugin_config call view#Undotree()

" Auto close parentheses and repeat by dot dot dot...
Plug 'cohama/lexima.vim'

Plug 'mg979/vim-visual-multi'

Plug 'dense-analysis/ale'
autocmd User plugin_config call lint#ALE()

Plug 'AndrewRadev/splitjoin.vim'

Plug 'ntpeters/vim-better-whitespace'

Plug 'wellle/context.vim'

Plug 'psliwka/vim-smoothie'

Plug 'lervag/vimtex'
autocmd User plugin_config call runner#vimtex()

" vim-signature: Manage marks with column
Plug 'kshenoy/vim-signature'

Plug 'rafi/awesome-vim-colorschemes'

" Initialize plugin system
call plug#end()
doautocmd User plugin_config

" View {{{1
try
  " Colorscheme may use plugin
  colorscheme gruvbox
catch
  " Builtin colorschemes: desert, peachpuff, quiet, slate
  colorscheme desert
endtry
" }}}1

" Options {{{1
set hlsearch    " Highlight the search results
set incsearch   " Show the pattern while typing

set modeline    " Modeline is the last comment line if vim is the editor. Use `help modeline` for detail.

set hidden  " Hide unsaved buffer

set expandtab   " Expand tag to space
set tabstop=4   " One tab includes four spaces
set shiftwidth=4    " The width of '<' and '>'
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.

set smartindent     " Do smart autoindenting

set ruler           " show the cursor position
set wildmenu        " display completion matches in a status line
set number          " Show line number
set splitbelow      " New buffer splits below by default
set splitright      " New buffer splits right by default
set mouse=a         " Enable mouse in all mode
set scrolloff=5     " Show a few lines around the cursor
set fileencodings=utf-8,gb18030,latin1
set background=dark

syntax enable       " This enables Vim's syntax-related features.
" Without this, some VimTeX features will not work
" }}}1

" Commands {{{1
augroup EnhancedHelp
  au!

  autocmd BufWinEnter *
        \ if &filetype == 'help'
        \ |   set number
        \ |   if winwidth('%') > 180
        \ |       wincmd L
        \ |       vertical resize 90
        \ |   endif
        \ | endif

augroup END
" }}}1
" vim: set sw=2 sts=2 et:
